[project]
name = "pinn"
version = "0.0.1"
description = "SIR model parameter estimation using Physics-Informed Neural Networks"
readme = "README.md"
requires-python = ">=3.9"
license = { file = "LICENSE" }
authors = [{ name = "Giacomo Guidotto", email = "giacomo.guidotto@gmail.com" }]
keywords = [
    "pinn",
    "sir",
    "epidemiology",
    "neural-networks",
    "physics-informed",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Mathematics",
]

dependencies = [
    # core
    "numpy>=2.0.0",
    "scipy>=1.13.0",
    "pandas>=2.2.0",
    "matplotlib>=3.9.0",
    "seaborn>=0.13.0",
    # DL
    "torch>=2.5.0",
    "torchaudio>=2.5.0",
    "lightning>=2.5.0",
    "torchmetrics>=1.7.0",
    "tensorboard>=2.19.0",
    # ML
    "scikit-learn>=1.6.0",
    "statsmodels>=0.14.0",
    # utils
    "tqdm>=4.67.0",
    "pyyaml>=6.0.0",
    "tabulate>=0.9.0",
    "sympy>=1.13.0",
    "mpmath>=1.3.0",
]

[project.optional-dependencies]
dev = ["pytest>=7.0.0", "pytest-cov>=4.0.0", "ruff>=0.1.0", "pre-commit>=3.0.0"]

[project.urls]
Homepage = "https://github.com/GiacomoGuidotto/sir-pinn"
Repository = "https://github.com/GiacomoGuidotto/sir-pinn"
Documentation = "https://github.com/GiacomoGuidotto/sir-pinn#readme"
Issues = "https://github.com/GiacomoGuidotto/sir-pinn/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/pinn"]

[tool.hatch.build.targets.sdist]
include = ["/src/pinn", "/README.md", "/LICENSE", "/pyproject.toml"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E741", # ambiguous variable names
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/pinn",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
